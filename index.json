{"repository_name":"spark","body":"# Spark\n\n![Shard CI](https://github.com/stephendolan/spark/workflows/Shard%20CI/badge.svg)\n[![API Documentation Website](https://img.shields.io/website?down_color=red&down_message=Offline&label=API%20Documentation&up_message=Online&url=https%3A%2F%2Fstephendolan.github.io%2Fspark%2F)](https://stephendolan.github.io/spark)\n[![GitHub release](https://img.shields.io/github/release/stephendolan/spark.svg?label=Release)](https://github.com/stephendolan/spark/releases)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  spark:\n    github: stephendolan/spark\n```\n\n2. Run `shards install`\n\n## Usage\n\nRequire the shard:\n\n```crystal\nrequire \"spark\"\n```\n\nThen, use any of the fully documented modules below to interact with your user:\n\n- ðŸ’¬ &nbsp; **[Spark::Prompt](https://stephendolan.github.io/spark/Spark/Prompt.html)**\n  - `#say` - Display a message to a user\n  - `#ask` - Get information from a user\n  - `#yes?` - Get confirmation from a user, with a default of \"Yes\"\n  - `#no?` - Get confirmation from a user, with a default of \"No\"\n- ðŸ—„ &nbsp; **[Spark::File](https://stephendolan.github.io/spark/Spark/File.html)**\n  - `.replace_in_file` - Replace some content in a file\n  - `.inject_into_file` - Insert content into a file before or after a pattern\n  - `.prepend_to_file` - Insert content at the beginning of a file\n  - `.append_to_file` - Insert content at the end of a file\n  - `.copy_file` - Copy a file\n  - `.create_file` - Create a file\n\n## Development\n\n1. Add your code\n1. Ensure specs pass with `crystal spec`\n1. Ensure correct formatting with `crystal tool format --check`\n1. Ensure correct style with `./bin/ameba`\n\n## Contributing\n\n1. Fork it (<https://github.com/stephendolan/spark/fork>)\n1. Create your feature branch (`git checkout -b my-new-feature`)\n1. Commit your changes (`git commit -am 'Add some feature'`)\n1. Push to the branch (`git push origin my-new-feature`)\n1. Create a new Pull Request\n\n## Credits & Inspirations\n\n- [TTY](https://github.com/piotrmurach/tty)\n- [Thor](https://github.com/erikhuda/thor)\n\n## Contributors\n\n- [Stephen Dolan](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"spark/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"spark","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"spark/InvalidPathError","path":"InvalidPathError.html","kind":"class","full_name":"InvalidPathError","name":"InvalidPathError","abstract":false,"superclass":{"html_id":"spark/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},"ancestors":[{"html_id":"spark/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},{"html_id":"spark/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/file/invalid_path_error.cr","line_number":2,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/invalid_path_error.cr#L2"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Thrown when a provided file path does not exist.","summary":"<p>Thrown when a provided file path does not exist.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"spark/Spark","path":"Spark.html","kind":"module","full_name":"Spark","name":"Spark","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/spark.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark.cr#L5"},{"filename":"src/spark/file.cr","line_number":3,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L3"},{"filename":"src/spark/file/create_file.cr","line_number":1,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L1"},{"filename":"src/spark/prompt.cr","line_number":3,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L3"},{"filename":"src/spark/prompt/confirmation_question.cr","line_number":3,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/confirmation_question.cr#L3"},{"filename":"src/spark/prompt/question.cr","line_number":1,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L1"},{"filename":"src/spark/prompt/statement.cr","line_number":1,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L1"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version \\\"/__w/spark/spark/src\\\"`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Spark is a CLI Utility library that makes working with users on the\ncommand line simpler than ever.","summary":"<p>Spark is a CLI Utility library that makes working with users on the command line simpler than ever.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"spark/Spark/File","path":"Spark/File.html","kind":"module","full_name":"Spark::File","name":"File","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/spark/file.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L5"},{"filename":"src/spark/file/create_file.cr","line_number":2,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L2"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"BEGINNING_OF_FILE_REGEX","name":"BEGINNING_OF_FILE_REGEX","value":"/\\A/","doc":null,"summary":null},{"id":"END_OF_FILE_REGEX","name":"END_OF_FILE_REGEX","value":"/\\z/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"spark/Spark/File","kind":"module","full_name":"Spark::File","name":"File"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"spark/Spark","kind":"module","full_name":"Spark","name":"Spark"},"doc":"Spark::File allows you to interact with the user's filesystem.","summary":"<p>Spark::File allows you to interact with the user's filesystem.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"append_to_file(relative_path:String,*content)-instance-method","html_id":"append_to_file(relative_path:String,*content)-instance-method","name":"append_to_file","doc":"Append any number of strings to the end of a file.\n\nExample:\n```\nSpark::File.append_to_file(\"README.md\", \"# Goodbye!\", \"You're at the bottom of the README.\")\n```","summary":"<p>Append any number of strings to the end of a file.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"args_string":"(relative_path : String, *content)","args_html":"(relative_path : String, *content)","location":{"filename":"src/spark/file.cr","line_number":66,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L66"},"def":{"name":"append_to_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"inject_into_file(relative_path, *content, after: END_OF_FILE_REGEX)"}},{"id":"append_to_file(relative_path:String,&:->String)-instance-method","html_id":"append_to_file(relative_path:String,&:->String)-instance-method","name":"append_to_file","doc":"Append the provided block content to the end of a file.\n\nExample:\n```\nSpark::File.append_to_file(\"README.md\") do\n  <<-CONTENT\n  # Goodbye\n\n  You're at the bottom of the README.\n  CONTENT\nend\n```","summary":"<p>Append the provided block content to the end of a file.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"args_string":"(relative_path : String, & :  -> String)","args_html":"(relative_path : String, & :  -> String)","location":{"filename":"src/spark/file.cr","line_number":82,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L82"},"def":{"name":"append_to_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> String)"},"return_type":"","visibility":"Public","body":"inject_into_file(relative_path, yield, after: END_OF_FILE_REGEX)"}},{"id":"copy_file(source_path:String,destination_path:String):String-instance-method","html_id":"copy_file(source_path:String,destination_path:String):String-instance-method","name":"copy_file","doc":"Copy a file from a provided source path to a provided destination.\n\nExample:\n```\nSpark::File.copy_file(\"README.md\", \"IDENTICAL_README.md\")\n```","summary":"<p>Copy a file from a provided source path to a provided destination.</p>","abstract":false,"args":[{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":"String"},{"name":"destination_path","doc":null,"default_value":"","external_name":"destination_path","restriction":"String"}],"args_string":"(source_path : String, destination_path : String) : String","args_html":"(source_path : String, destination_path : String) : String","location":{"filename":"src/spark/file.cr","line_number":119,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L119"},"def":{"name":"copy_file","args":[{"name":"source_path","doc":null,"default_value":"","external_name":"source_path","restriction":"String"},{"name":"destination_path","doc":null,"default_value":"","external_name":"destination_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"raise_unless_exists(source_path)\ncreate_file(destination_path, ::File.read(source_path))\n"}},{"id":"create_file(relative_path:String,*content):String-instance-method","html_id":"create_file(relative_path:String,*content):String-instance-method","name":"create_file","doc":"Create a new file with the provided content.\n\nExample:\n```\nSpark::File.create_file(\"README.md\", \"# Welcome\\n\\n\", \"This is my new file.\")\n```","summary":"<p>Create a new file with the provided content.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"args_string":"(relative_path : String, *content) : String","args_html":"(relative_path : String, *content) : String","location":{"filename":"src/spark/file.cr","line_number":92,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L92"},"def":{"name":"create_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"file_content = content.join\n(CreateFile.new(relative_path, file_content)).call\n"}},{"id":"create_file(relative_path:String,&:->String):String-instance-method","html_id":"create_file(relative_path:String,&:->String):String-instance-method","name":"create_file","doc":"Create a new file with the provided block content.\n\nExample:\n```\nSpark::File.create_file(\"README.md\") do\n  <<-CONTENT\n  # Welcome\n\n  This is my new file.\n  CONTENT\n```","summary":"<p>Create a new file with the provided block content.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"args_string":"(relative_path : String, & :  -> String) : String","args_html":"(relative_path : String, & :  -> String) : String","location":{"filename":"src/spark/file.cr","line_number":109,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L109"},"def":{"name":"create_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> String)"},"return_type":"String","visibility":"Public","body":"(CreateFile.new(relative_path, yield)).call"}},{"id":"inject_into_file(relative_path:String,*content,afterpattern:Regex|String)-instance-method","html_id":"inject_into_file(relative_path:String,*content,afterpattern:Regex|String)-instance-method","name":"inject_into_file","doc":"Inject any number of strings *after* the provided pattern.\n\nExample:\n```\nSpark::File.inject_into_file(\"README.md\", \"# New Section\", after: \"# Last Section\\n\")\n```","summary":"<p>Inject any number of strings <em>after</em> the provided pattern.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"after","restriction":"Regex | String"}],"args_string":"(relative_path : String, *content, after pattern : Regex | String)","args_html":"(relative_path : String, *content, after pattern : Regex | String)","location":{"filename":"src/spark/file.cr","line_number":131,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L131"},"def":{"name":"inject_into_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"after","restriction":"Regex | String"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"replacement = \"\\\\0\" + content.join\nreplace_in_file(relative_path, pattern, replacement)\n"}},{"id":"inject_into_file(relative_path:String,*,afterpattern:Regex|String,&:->String)-instance-method","html_id":"inject_into_file(relative_path:String,*,afterpattern:Regex|String,&:->String)-instance-method","name":"inject_into_file","doc":"Inject the provided block content *after* the provided pattern.\n\nExample:\n```\nSpark::File.inject_into_file(\"README.md\", after: \"# Last Section\\n\") do\n  <<-CONTENT\n  This is some new file content.\n  It's going to be great!\\n\n  CONTENT\nend\n```","summary":"<p>Inject the provided block content <em>after</em> the provided pattern.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"after","restriction":"Regex | String"}],"args_string":"(relative_path : String, *, after pattern : Regex | String, & :  -> String)","args_html":"(relative_path : String, *, after pattern : Regex | String, & :  -> String)","location":{"filename":"src/spark/file.cr","line_number":148,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L148"},"def":{"name":"inject_into_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"after","restriction":"Regex | String"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> String)"},"return_type":"","visibility":"Public","body":"replacement = \"\\\\0#{yield}\"\nreplace_in_file(relative_path, pattern, replacement)\n"}},{"id":"inject_into_file(relative_path:String,*content,beforepattern:Regex|String)-instance-method","html_id":"inject_into_file(relative_path:String,*content,beforepattern:Regex|String)-instance-method","name":"inject_into_file","doc":"Inject any number of strings *before* the provided pattern.\n\nExample:\n```\nSpark::File.inject_into_file(\"README.md\", \"# New Section\", before: \"# First Section\\n\")\n```","summary":"<p>Inject any number of strings <em>before</em> the provided pattern.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"before","restriction":"Regex | String"}],"args_string":"(relative_path : String, *content, before pattern : Regex | String)","args_html":"(relative_path : String, *content, before pattern : Regex | String)","location":{"filename":"src/spark/file.cr","line_number":160,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L160"},"def":{"name":"inject_into_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"before","restriction":"Regex | String"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"replacement = content.join + \"\\\\0\"\nreplace_in_file(relative_path, pattern, replacement)\n"}},{"id":"inject_into_file(relative_path:String,*,beforepattern:Regex|String,&:->String)-instance-method","html_id":"inject_into_file(relative_path:String,*,beforepattern:Regex|String,&:->String)-instance-method","name":"inject_into_file","doc":"Inject the provided block content *before* the provided pattern.\n\nExample:\n```\nSpark::File.inject_into_file(\"README.md\", before: \"# First Section\\n\") do\n  <<-CONTENT\n  This is some new file content.\n  It's going to be great!\\n\n  CONTENT\nend\n```","summary":"<p>Inject the provided block content <em>before</em> the provided pattern.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"before","restriction":"Regex | String"}],"args_string":"(relative_path : String, *, before pattern : Regex | String, & :  -> String)","args_html":"(relative_path : String, *, before pattern : Regex | String, & :  -> String)","location":{"filename":"src/spark/file.cr","line_number":177,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L177"},"def":{"name":"inject_into_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"pattern","doc":null,"default_value":"","external_name":"before","restriction":"Regex | String"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> String)"},"return_type":"","visibility":"Public","body":"replacement = \"#{yield}\\\\0\"\nreplace_in_file(relative_path, pattern, replacement)\n"}},{"id":"prepend_to_file(relative_path:String,*content)-instance-method","html_id":"prepend_to_file(relative_path:String,*content)-instance-method","name":"prepend_to_file","doc":"Prepend any number of strings to the beginning of a file.\n\nExample:\n```\nSpark::File.prepend_to_file(\"README.md\", \"# Welcome!\", \"You're at the top of the README.\")\n```","summary":"<p>Prepend any number of strings to the beginning of a file.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"args_string":"(relative_path : String, *content)","args_html":"(relative_path : String, *content)","location":{"filename":"src/spark/file.cr","line_number":40,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L40"},"def":{"name":"prepend_to_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"inject_into_file(relative_path, *content, before: BEGINNING_OF_FILE_REGEX)"}},{"id":"prepend_to_file(relative_path:String,&:->String)-instance-method","html_id":"prepend_to_file(relative_path:String,&:->String)-instance-method","name":"prepend_to_file","doc":"Prepend the provided block content to the beginning of a file.\n\nExample:\n```\nSpark::File.prepend_to_file(\"README.md\") do\n  <<-CONTENT\n  # Welcome\n\n  You're at the top of the README.\n  CONTENT\nend\n```","summary":"<p>Prepend the provided block content to the beginning of a file.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"args_string":"(relative_path : String, & :  -> String)","args_html":"(relative_path : String, & :  -> String)","location":{"filename":"src/spark/file.cr","line_number":56,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L56"},"def":{"name":"prepend_to_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(-> String)"},"return_type":"","visibility":"Public","body":"inject_into_file(relative_path, yield, before: BEGINNING_OF_FILE_REGEX)"}},{"id":"raise_unless_exists(path:String)-instance-method","html_id":"raise_unless_exists(path:String)-instance-method","name":"raise_unless_exists","doc":"Raises a `Spark::File::InvalidPathError` if the provided path does not exist.","summary":"<p>Raises a <code>Spark::File::InvalidPathError</code> if the provided path does not exist.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/spark/file.cr","line_number":12,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L12"},"def":{"name":"raise_unless_exists","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ::File.exists?(path)\n  return\nend\nraise(InvalidPathError.new(\"File path '#{path}' does not exist.\"))\n"}},{"id":"replace_in_file(relative_path:String,pattern:Regex|String,replacement:String)-instance-method","html_id":"replace_in_file(relative_path:String,pattern:Regex|String,replacement:String)-instance-method","name":"replace_in_file","doc":"Replace a specific pattern with some replacement text throughout a given file.\n\nExample:\n```\nSpark::File.replace_in_file(\"shard.yml\", pattern: \"MIT\", replacement: \"Apache\")\n```","summary":"<p>Replace a specific pattern with some replacement text throughout a given file.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Regex | String"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"args_string":"(relative_path : String, pattern : Regex | String, replacement : String)","args_html":"(relative_path : String, pattern : Regex | String, replacement : String)","location":{"filename":"src/spark/file.cr","line_number":24,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file.cr#L24"},"def":{"name":"replace_in_file","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Regex | String"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise_unless_exists(relative_path)\npattern = process_pattern(pattern)\nexisting_file_content = ::File.read(relative_path)\nnew_file_content = existing_file_content.gsub(pattern, replacement)\n::File.write(relative_path, new_file_content)\n"}}],"macros":[],"types":[{"html_id":"spark/Spark/File/CreateFile","path":"Spark/File/CreateFile.html","kind":"class","full_name":"Spark::File::CreateFile","name":"CreateFile","abstract":false,"superclass":{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/file/create_file.cr","line_number":4,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L4"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"spark/Spark/File","kind":"module","full_name":"Spark::File","name":"File"},"doc":"CreateFile acts as a convenient wrapper to perform file creation.","summary":"<p>CreateFile acts as a convenient wrapper to perform file creation.</p>","class_methods":[],"constructors":[{"id":"new(relative_path:String,content:String)-class-method","html_id":"new(relative_path:String,content:String)-class-method","name":"new","doc":"Set up a new CreateFile object for creation.","summary":"<p>Set up a new CreateFile object for creation.</p>","abstract":false,"args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"args_string":"(relative_path : String, content : String)","args_html":"(relative_path : String, content : String)","location":{"filename":"src/spark/file/create_file.cr","line_number":10,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L10"},"def":{"name":"new","args":[{"name":"relative_path","doc":null,"default_value":"","external_name":"relative_path","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(relative_path, content)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"base-instance-method","html_id":"base-instance-method","name":"base","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/spark/file/create_file.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L5"},"def":{"name":"base","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@base"}},{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":"Create the initialized `CreateFile` object.","summary":"<p>Create the initialized <code><a href=\"../../Spark/File/CreateFile.html\">CreateFile</a></code> object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/spark/file/create_file.cr","line_number":14,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L14"},"def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Dir.mkdir_p(::File.dirname(relative_path))\n::File.write(relative_path, content)\nrelative_path\n"}},{"id":"content:String-instance-method","html_id":"content:String-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/spark/file/create_file.cr","line_number":7,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L7"},"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content"}},{"id":"relative_path:String-instance-method","html_id":"relative_path:String-instance-method","name":"relative_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/spark/file/create_file.cr","line_number":6,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/file/create_file.cr#L6"},"def":{"name":"relative_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@relative_path"}}],"macros":[],"types":[]}]},{"html_id":"spark/Spark/Prompt","path":"Spark/Prompt.html","kind":"class","full_name":"Spark::Prompt","name":"Prompt","abstract":false,"superclass":{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/prompt.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L5"},{"filename":"src/spark/prompt/confirmation_question.cr","line_number":4,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/confirmation_question.cr#L4"},{"filename":"src/spark/prompt/question.cr","line_number":2,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L2"},{"filename":"src/spark/prompt/statement.cr","line_number":2,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L2"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"spark/Spark","kind":"module","full_name":"Spark","name":"Spark"},"doc":"Spark::Prompt allows you to interact with users to gather input or display messages","summary":"<p>Spark::Prompt allows you to interact with users to gather input or display messages</p>","class_methods":[],"constructors":[{"id":"new(input:IO::FileDescriptor=STDIN,output:IO::FileDescriptor=STDOUT)-class-method","html_id":"new(input:IO::FileDescriptor=STDIN,output:IO::FileDescriptor=STDOUT)-class-method","name":"new","doc":"Initialize a new Spark::Prompt","summary":"<p>Initialize a new Spark::Prompt</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"STDIN","external_name":"input","restriction":"IO::FileDescriptor"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO::FileDescriptor"}],"args_string":"(input : IO::FileDescriptor = <span class=\"t\">STDIN</span>, output : IO::FileDescriptor = <span class=\"t\">STDOUT</span>)","args_html":"(input : IO::FileDescriptor = <span class=\"t\">STDIN</span>, output : IO::FileDescriptor = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/spark/prompt.cr","line_number":19,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L19"},"def":{"name":"new","args":[{"name":"input","doc":null,"default_value":"STDIN","external_name":"input","restriction":"IO::FileDescriptor"},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO::FileDescriptor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(input, output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ask(message:String,**options)-instance-method","html_id":"ask(message:String,**options)-instance-method","name":"ask","doc":"Ask the user a question.\n\nExample:\n```\nprompt = Spark::Prompt.new\nprompt.ask(\"What is your name?\") # => \"What is your name?\"\n```","summary":"<p>Ask the user a question.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String, **options)","args_html":"(message : String, **options)","location":{"filename":"src/spark/prompt.cr","line_number":55,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L55"},"def":{"name":"ask","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if message.blank?\n  return\nend\nquestion = Question.new(self, **options)\nquestion.call(message)\n"}},{"id":"decorate(string:String,color:Symbol?=nil,style:Symbol?=nil)-instance-method","html_id":"decorate(string:String,color:Symbol?=nil,style:Symbol?=nil)-instance-method","name":"decorate","doc":"Color and stylize a given string.\n\nExample:\n```\nprompt = Spark::Prompt.new\nprompt.decorate(\"This is an example\", color: :green, style: :bold) # => \"\\e[32;1mHello, there!\\e[0m\\n\"\n```","summary":"<p>Color and stylize a given string.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"}],"args_string":"(string : String, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>)","args_html":"(string : String, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/spark/prompt.cr","line_number":107,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L107"},"def":{"name":"decorate","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string = case color\nin Symbol\n  string.colorize(color)\nin Nil\n  string.colorize(:default)\nend\ncase style\nin Symbol\n  string.mode(style)\nin Nil\n  string\nend\n"}},{"id":"no?(message:String,**options)-instance-method","html_id":"no?(message:String,**options)-instance-method","name":"no?","doc":"Ask the user a yes/no question, where the default is \"No\".\n\nExample:\n```\nprompt = Spark::Prompt.new\nif prompt.no? \"Are you feeling happy today?\"\n  prompt.say \"I'm sorry to hear that.\"\nelse\n  prompt.say \"Then it's going to be a great day!\"\nend\n```","summary":"<p>Ask the user a yes/no question, where the default is \"No\".</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String, **options)","args_html":"(message : String, **options)","location":{"filename":"src/spark/prompt.cr","line_number":92,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L92"},"def":{"name":"no?","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if message.blank?\n  return\nend\noptions_with_default = options.merge(default: false)\nquestion = ConfirmationQuestion.new(self, **options_with_default)\nquestion.call(message)\n"}},{"id":"say(message:String=&quot;&quot;,**options)-instance-method","html_id":"say(message:String=&quot;&quot;,**options)-instance-method","name":"say","doc":"Output some text to a user, with an optional color and style.\n\nPlain example:\n```\nprompt = Spark::Prompt.new\nprompt.say(\"This is an example\") # => \"This is an example\\n\"\n```\n\nWithout a newline:\n```\nprompt = Spark::Prompt.new\nprompt.say(\"This is an example\", newline: false) # => \"This is an example\"\n```\n\nWith color and style (see Spark::Prompt#decorate):\n```\nprompt = Spark::Prompt.new\nprompt.say(\"This is an example\", color: :green, style: :bold) # => \"\\e[32;1mHello, there!\\e[0m\\n\"\n```","summary":"<p>Output some text to a user, with an optional color and style.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"}],"args_string":"(message : String = <span class=\"s\">&quot;&quot;</span>, **options)","args_html":"(message : String = <span class=\"s\">&quot;&quot;</span>, **options)","location":{"filename":"src/spark/prompt.cr","line_number":41,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L41"},"def":{"name":"say","args":[{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if message.blank?\n  return\nend\nstatement = Statement.new(self, **options)\nstatement.call(message)\n"}},{"id":"yes?(message:String,**options)-instance-method","html_id":"yes?(message:String,**options)-instance-method","name":"yes?","doc":"Ask the user a yes/no question, where the default is \"Yes\".\n\nExample:\n```\nprompt = Spark::Prompt.new\nif prompt.yes? \"Did you tell me the truth?\"\n  prompt.say \"Great! Thank you, #{user_name}.\", color: :green\nelse\n  prompt.say \"Shame on you!\"\nend\n```","summary":"<p>Ask the user a yes/no question, where the default is \"Yes\".</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String, **options)","args_html":"(message : String, **options)","location":{"filename":"src/spark/prompt.cr","line_number":73,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt.cr#L73"},"def":{"name":"yes?","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if message.blank?\n  return\nend\noptions_with_default = options.merge(default: true)\nquestion = ConfirmationQuestion.new(self, **options_with_default)\nquestion.call(message)\n"}}],"macros":[],"types":[{"html_id":"spark/Spark/Prompt/ConfirmationQuestion","path":"Spark/Prompt/ConfirmationQuestion.html","kind":"class","full_name":"Spark::Prompt::ConfirmationQuestion","name":"ConfirmationQuestion","abstract":false,"superclass":{"html_id":"spark/Spark/Prompt/Question","kind":"class","full_name":"Spark::Prompt::Question","name":"Question"},"ancestors":[{"html_id":"spark/Spark/Prompt/Question","kind":"class","full_name":"Spark::Prompt::Question","name":"Question"},{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/prompt/confirmation_question.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/confirmation_question.cr#L5"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"spark/Spark/Prompt","kind":"class","full_name":"Spark::Prompt","name":"Prompt"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"spark/Spark/Prompt/Question","path":"Spark/Prompt/Question.html","kind":"class","full_name":"Spark::Prompt::Question","name":"Question","abstract":false,"superclass":{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/prompt/question.cr","line_number":4,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L4"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"spark/Spark/Prompt/ConfirmationQuestion","kind":"class","full_name":"Spark::Prompt::ConfirmationQuestion","name":"ConfirmationQuestion"}],"including_types":[],"namespace":{"html_id":"spark/Spark/Prompt","kind":"class","full_name":"Spark::Prompt","name":"Prompt"},"doc":"A Question is used to gather user input.","summary":"<p>A Question is used to gather user input.</p>","class_methods":[],"constructors":[{"id":"new(prompt:Spark::Prompt,color:Symbol?=nil,style:Symbol?=nil,default:Bool|String|Nil=nil,**options)-class-method","html_id":"new(prompt:Spark::Prompt,color:Symbol?=nil,style:Symbol?=nil,default:Bool|String|Nil=nil,**options)-class-method","name":"new","doc":"Creates a new Question.","summary":"<p>Creates a new Question.</p>","abstract":false,"args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Spark::Prompt"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Bool | String | Nil"}],"args_string":"(prompt : Spark::Prompt, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>, default : Bool | String | Nil = <span class=\"n\">nil</span>, **options)","args_html":"(prompt : <a href=\"../../Spark/Prompt.html\">Spark::Prompt</a>, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>, default : Bool | String | Nil = <span class=\"n\">nil</span>, **options)","location":{"filename":"src/spark/prompt/question.cr","line_number":10,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L10"},"def":{"name":"new","args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Spark::Prompt"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Bool | String | Nil"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(prompt, color, style, default, **options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(message:String)-instance-method","html_id":"call(message:String)-instance-method","name":"call","doc":"Ask the question to the user.\n\nThis handles adding the default text, a space before user input, and decoration.\n\nIt also gathers user input.","summary":"<p>Ask the question to the user.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/spark/prompt/question.cr","line_number":24,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L24"},"def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = add_default_to_message(message)\nmessage = message + \" \"\nmessage = @prompt.decorate(message, color, style)\n@prompt.print(message)\ninput = @prompt.gets\nprocess_input(input)\n"}},{"id":"color:Symbol?-instance-method","html_id":"color:Symbol?-instance-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/spark/prompt/question.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L5"},"def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color"}},{"id":"default:Bool|String|Nil-instance-method","html_id":"default:Bool|String|Nil-instance-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool | String | Nil","args_html":" : Bool | String | Nil","location":{"filename":"src/spark/prompt/question.cr","line_number":7,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L7"},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default"}},{"id":"style:Symbol?-instance-method","html_id":"style:Symbol?-instance-method","name":"style","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/spark/prompt/question.cr","line_number":6,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/question.cr#L6"},"def":{"name":"style","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@style"}}],"macros":[],"types":[]},{"html_id":"spark/Spark/Prompt/Statement","path":"Spark/Prompt/Statement.html","kind":"class","full_name":"Spark::Prompt::Statement","name":"Statement","abstract":false,"superclass":{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"spark/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"spark/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spark/prompt/statement.cr","line_number":4,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L4"}],"repository_name":"spark","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"spark/Spark/Prompt","kind":"class","full_name":"Spark::Prompt","name":"Prompt"},"doc":"Represents a statement output to the user's prompt.","summary":"<p>Represents a statement output to the user's prompt.</p>","class_methods":[],"constructors":[{"id":"new(prompt:Spark::Prompt,newline:Bool=true,color:Symbol?=nil,style:Symbol?=nil)-class-method","html_id":"new(prompt:Spark::Prompt,newline:Bool=true,color:Symbol?=nil,style:Symbol?=nil)-class-method","name":"new","doc":"Create a new Statement that can be rendered as output to the user's prompt.","summary":"<p>Create a new Statement that can be rendered as output to the user's prompt.</p>","abstract":false,"args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Spark::Prompt"},{"name":"newline","doc":null,"default_value":"true","external_name":"newline","restriction":"Bool"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"}],"args_string":"(prompt : Spark::Prompt, newline : Bool = <span class=\"n\">true</span>, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>)","args_html":"(prompt : <a href=\"../../Spark/Prompt.html\">Spark::Prompt</a>, newline : Bool = <span class=\"n\">true</span>, color : Symbol? = <span class=\"n\">nil</span>, style : Symbol? = <span class=\"n\">nil</span>)","location":{"filename":"src/spark/prompt/statement.cr","line_number":10,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L10"},"def":{"name":"new","args":[{"name":"prompt","doc":null,"default_value":"","external_name":"prompt","restriction":"Spark::Prompt"},{"name":"newline","doc":null,"default_value":"true","external_name":"newline","restriction":"Bool"},{"name":"color","doc":null,"default_value":"nil","external_name":"color","restriction":"Symbol | Nil"},{"name":"style","doc":null,"default_value":"nil","external_name":"style","restriction":"Symbol | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(prompt, newline, color, style)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(message:String)-instance-method","html_id":"call(message:String)-instance-method","name":"call","doc":"Output the Statement message to the prompt","summary":"<p>Output the Statement message to the prompt</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/spark/prompt/statement.cr","line_number":19,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L19"},"def":{"name":"call","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = @prompt.decorate(message, color, style)\nif newline?\n  @prompt.puts(message)\nelse\n  @prompt.print(message)\nend\n"}},{"id":"color:Symbol?-instance-method","html_id":"color:Symbol?-instance-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/spark/prompt/statement.cr","line_number":6,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L6"},"def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color"}},{"id":"newline?:Bool-instance-method","html_id":"newline?:Bool-instance-method","name":"newline?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/spark/prompt/statement.cr","line_number":5,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L5"},"def":{"name":"newline?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@newline"}},{"id":"style:Symbol?-instance-method","html_id":"style:Symbol?-instance-method","name":"style","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","args_html":" : Symbol?","location":{"filename":"src/spark/prompt/statement.cr","line_number":7,"url":"https://github.com/stephendolan/spark/blob/e668b31312499667ca0e06dbc84f0ed3c4f96411/src/spark/prompt/statement.cr#L7"},"def":{"name":"style","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@style"}}],"macros":[],"types":[]}]}]}]}}